import java.util.Formatter;
import java.util.Scanner;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;



public class FileManager{

	private static String fName;
	private static String workDirectory = System.getenv("APPDATA")+"\\Tomiscout\\";
	int maxScore;
	
	public void loadData(String filename) throws IOException
	{
		String line = "";
		fName = filename;
		
		System.out.println(workDirectory + fName);
		createFile(workDirectory + fName);
		
		/*		
		Scanner reader;
		
		//Loads file
		reader = getFileScanner(workDirectory+fName);
		if(reader==null) reader = getFileScanner(workDirectory+fName);
		
			
		
		//Reads maxscore
		if(reader.hasNext()){
			line = reader.next();
		maxScore = Integer.parseInt(line);
		Gui.setMaxScore(maxScore);
		}
		
		
		reader.close();*/
	}
	
	public void writeData(int x)
	{
		try {
            // Assume default encoding.
            FileWriter fileWriter =
                new FileWriter(workDirectory+fName);

            // Always wrap FileWriter in BufferedWriter.
            BufferedWriter bufferedWriter =
                new BufferedWriter(fileWriter);

            // Note that write() does not automatically
            // append a newline character.
            bufferedWriter.write("Hello there,");
            bufferedWriter.write(" here is some text.");
            bufferedWriter.newLine();
            bufferedWriter.write("We are writing");
            bufferedWriter.write(" the text to the file.");

            // Always close files.
            bufferedWriter.close();
        }
        catch(IOException ex) {
            System.out.println(
                "Error writing to file '"
                + workDirectory+fName + "'");
            // Or we could just do this:
            // ex.printStackTrace();
        }
    }
	
	
	@SuppressWarnings("unused")
	public static void createFile(String dir, String name)
	{	
		//Creates folder
		 File theDir = new File(dir);

		  // if the directory does not exist, create it
		  if (!theDir.exists()) {
		    System.out.println("creating directory: " + dir);
		    boolean result = false;

		    try{
		        theDir.mkdir();
		        result = true;
		     } catch(SecurityException se){
		        se.printStackTrace();
		     }        
		     if(result) {    
		       System.out.println("DIR created");  
		     }
		  }
		
		
		//Creates .txt file
		try {
			 
		      File file = new File(dir+name);
	 
		      if (file.createNewFile()){
		        System.out.println("File is created!");
		      }else{
		        System.out.println("File already exists.");
		      }
	 
	    	} catch (IOException e) {
		      e.printStackTrace();
		}
	
	}
	
	//Creates Scanner
	 public static Scanner getFileScanner(String filename) {
		    Scanner scanner = null;
		    try { scanner = new Scanner(new java.io.File(filename)); }
		    catch (Exception e) {
		      System.out.println("File not found");
		      createFile(filename);
		    }
		    return scanner;
		  }
	
}
//http://www.kosbie.net/cmu/fall-08/15-100/handouts/notes-scanner-methods-and-console-ui.html
